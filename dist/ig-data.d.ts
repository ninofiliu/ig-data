// Generated by dts-bundle v0.7.3

declare module 'ig-data' {
    import * as publication from 'ig-data/publication';
    import * as user from 'ig-data/profile/user';
    export { publication, user };
}

declare module 'ig-data/publication' {
    import { PublicationFromShortcode, PublicationFromUrl, PublicationFromSource } from 'ig-data/types/main';
    /**
        * Get publication data from its shortcode
        * @param shortcode the 11 characters in the url of the publication: instagram.com/p/<shortcode>
        */
    const fromShortcode: PublicationFromShortcode;
    /**
        * Get publication data from its url
        * @param url the url of the publication, ex: https://www.instagram.com/p/BfJX1m1lZ5j/
        */
    const fromUrl: PublicationFromUrl;
    /**
        * Get publication data from its source code
        * @param source example: content of https://www.instagram.com/p/BfJX1m1lZ5j/
        */
    const fromSource: PublicationFromSource;
    export { fromShortcode, fromUrl, fromSource };
}

declare module 'ig-data/profile/user' {
    import { UserFromUsername, UserFromUrl, UserFromSource } from 'ig-data/types/main';
    /**
        * Get user data from username
        * @param username example: 'ssttaacckkyy'
        */
    const fromUsername: UserFromUsername;
    /**
        * Get user data from profile url
        * @param url https://www.instagram.com/<username>
        */
    const fromUrl: UserFromUrl;
    /**
        * Get user data from source code of profile page
        * @param source content of https://www.instagram.com/<username>
        */
    const fromSource: UserFromSource;
    export { fromUsername, fromUrl, fromSource };
}

declare module 'ig-data/types/main' {
    type Media = {
        type: 'image' | 'video';
        width: number;
        height: number;
        src: string;
    };
    type Publication = {
        shortcode: string;
        sidecar: boolean;
        media: Media | Media[];
        location: null | any;
    };
    type User = {
        id: string;
        username: string;
        fullName: string;
        biography: string;
        isPrivate: boolean;
        isVerified: boolean;
        profilePicture: string;
        followers: number;
        follows: number;
        externalUrl: string | null;
    };
    type PublicationFromShortcode = (shortcode: string) => Promise<Publication>;
    type PublicationFromUrl = (url: string) => Promise<Publication>;
    type PublicationFromSource = (source: string) => Promise<Publication>;
    type UserFromUsername = (username: string) => Promise<User>;
    type UserFromUrl = (url: string) => Promise<User>;
    type UserFromSource = (source: string) => Promise<User>;
    export { Media, Publication, User, PublicationFromShortcode, PublicationFromUrl, PublicationFromSource, UserFromUsername, UserFromUrl, UserFromSource };
}

